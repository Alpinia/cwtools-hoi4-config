types = {
	type[technology] = {
		skip_root_key = technologies
		path = "game/common/technologies"
		subtype[doctrine] = {
			doctrine = yes
		}
	}
	type[tech_sharing_group] = {
		path = "game/common/technology_sharing"
		name_field = "id"
	}
}

## replace_scope = { this = country root = country }
technology = {
	## cardinality = 0..1
	show_equipment_icon = bool
	## cardinality = 0..1
	desc = localisation
	
	## cardinality = 0..1
	### hides technology unless trigger is true
	allow = {
		## cardinality = 0..100
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	### hides technology and children unless trigger is true
	allow_branch = {
		## cardinality = 0..100
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	### make technology exclusive with techs named
	xor = {
		## cardinality = 1..100
		<technology>
	}
	## cardinality = 0..1
	### enables listed units
	enable_subunits = {
		## cardinality = 1..100
		<unit>
	}
	## cardinality = 0..1
	### enables listed equipment
	enable_equipments = {
		## cardinality = 1..100
		<equipment>
	}
	## cardinality = 0..1
	### sets max level of named building
	enable_building = {
		building = <building>
		level = int
	}
	## cardinality = 0..1
	enable_tactic = <combat_tactic>
	## cardinality = 0..1
	### technologies directly dependent on this tech
	sub_technologies = {
		# vanila defines limit sub techs to three
		## cardinality = 0..3
		<technology>
	}
	## cardinality = 0..100
	### techs following this
	path = {
		leads_to_tech = <technology>
		research_cost_coeff = float
	}
	## cardinality = 0..1
	dependencies = {
		## cardinality = 0..100
		<technology> = int
	}
	### multiplier to base tech cost in defines.lua
	research_cost = float
	## cardinality = 0..1
	### when ahead of time penalty reaches 0
	start_year = int
	## cardinality = 0..100
	### which folder(s) tech appears in
	folder = {
		name = enum[tech_folder]
		position = { x = int y = int }
	}
	## cardinality = 0..1
	### is a doctrine
	doctrine = bool
	## cardinality = 0..1
	### ai weights for research
	ai_will_do = {
		factor = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	## cardinality = 0..1
	### modifies ai willingness for categories
	ai_research_weights = {
		## cardinality = 0..100
		enum[ai_research_areas] = float
		## cardinality = 0..100
		enum[tech_category] = float
		## cardinality = 0..100
		enum[unit_types] = float
	}
	## cardinality = 0..1
	### categories for tech
	categories = {
		## cardinality = 0..100
		enum[tech_category]
	}
	## cardinality = 0..100
	enum[unit_category] = {
		## cardinality = 0..100
		alias_name[unit_stat] = alias_match_left[unit_stat]
		alias_name[naval_stat] = alias_match_left[naval_stat]
		alias_name[air_stat] = alias_match_left[air_stat]
	}
	## cardinality = 0..100
	<unit> = {
		## cardinality = 0..100
		alias_name[unit_stat] = alias_match_left[unit_stat]
		alias_name[naval_stat] = alias_match_left[naval_stat]
		alias_name[air_stat] = alias_match_left[air_stat]
	}
	## cardinality = 0..1
	modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	on_research_complete = {
		## cardinality = 0..1
		limit = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		alias_name[effect] = alias_match_left[effect]
	}
	## cardinality = 0..1
	show_effect_as_desc = bool
	alias_name[modifier] = alias_match_left[modifier]
}

tech_sharing_group = {
	id = scalar
	name = localisation
	desc = localisation
	picture = scalar

	research_sharing_per_country_bonus = float
	## cardinality = 0..1
	is_faction_sharing = yes
	## cardinality = 0..1
	available = {
		alias_name[trigger] = alias_match_left[trigger]
	}
}
enums = {
	complex_enum[tech_category] = {
		path = "game/common/technology_tags"
		start_from_root = yes
		name = {
			technology_categories = {
				enum_name
			}
		}
	}
	complex_enum[tech_folder] = {
		path = "game/common/technology_tags"
		start_from_root = yes
		name = {
			technology_folders = {
				enum_name
			}
		}
	}
}