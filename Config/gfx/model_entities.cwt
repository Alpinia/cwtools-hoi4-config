types = {
	## type_key_filter = pdxmesh
	type[pdxmesh] = {
		skip_root_key = objectTypes
		path = "game/gfx/entities"
		path = "game/gfx/models"
		name_field = "name"
	}

	## type_key_filter = entity
	type[entity] = {
		path = "game/gfx/entities"
		path = "game/gfx/models"
		name_field = "name"
	}

	## type_key_filter = animation
	type[model_animation] = {
		path = "game/gfx/entities"
		path = "game/gfx/models"
		name_field = "name"
	}
}

pdxmesh = {
	name = scalar
	file = filepath

	## cardinality = 0..1
	scale = float

	## cardinality = 0..inf
	animation = {
		id = scalar
		type = scalar
	}

	## cardinality = 0..inf
	meshsettings = {
		name = scalar
		index = int
		texture_diffuse = scalar
		texture_normal = scalar
		texture_specular = scalar
		shader = scalar
	}

	## cardinality = 0..1
	cull_distance = float
}


entity = {
	name = scalar

	## cardinality = 0..1
	pdxmesh = <pdxmesh>

	## cardinality = 0..1
	cull_radius = float

	## cardinality = 0..1
	scale = float

	## cardinality = 0..inf
	locator = {
		name = scalar
		position = {
			## cardinality = 3..3
			float
		}
	}

	## cardinality = 0..1
	default_state = enum[model_states]
	## cardinality = 0..1
	default_state = no_state

	## cardinality = 0..inf
	state = {
		name = scalar

		## cardinality = 0..1
		state_time = float

		## cardinality = 0..1
		next_state = enum[model_states]

		## cardinality = 0..1
		animation = enum[model_animations]
		## cardinality = 0..1
		animation = <model_animation>

		## cardinality = 0..1
		animation_speed = float

		## cardinality = 0..1
		animation_blend_time = float

		## cardinality = 0..1
		time_offset = {
			## cardinality = 2..2
			float
		}

		## cardinality = 0..1
		looping = bool

		## cardinality = 0..inf
		event = {
			## cardinality = 0..1
			trigger_once = bool

			## cardinality = 0..1
			node = scalar

			## cardinality = 0..1
			time = float

			## cardinality = 0..1
			particle = <pdxparticle>

			## cardinality = 0..1
			keep_particle = bool

			## cardinality = 0..1
			sound = {
				soundeffect = scalar
			}

			## cardinality = 0..1
			light = <light>
		}

		## cardinality = 0..1
		game_data = {
			## cardinality = 1..inf
			hitmiss_effect = {
				time = float
				type = big
			}
		}
	}
}

animation = {
	name = scalar
	file = scalar
}

enums = {

}

enums = {
	enum[model_animations] = {
		arm_out
		attack
		back_bend
		combat_idle
		damaged
		damaged_attack
		damaged_defend
		death
		defend
		idle
		jump
		leg_forward
		move
		squat
	}

	complex_enum[model_states] = {
		path = "game/gfx"
		name = {
			state = {
				name = enum_name
			}
		}
	}

	complex_enum[model_locators] = {
		path = "game/gfx/models"
		name = {
			locator = {
				name = enum_name
			}
			state = {
				locator = {
					name = enum_name
				}
			}
		}
	}
}
